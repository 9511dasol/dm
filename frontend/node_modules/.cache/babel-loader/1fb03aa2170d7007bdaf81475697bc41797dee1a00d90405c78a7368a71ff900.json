{"ast":null,"code":"var _jsxFileName = \"C:\\\\Mtest\\\\workdjango\\\\instagram\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport ChatWindow from './components//ChatWindow';\nimport MessageInput from './components/MessageInput';\nimport ChatList from './components/ChatList';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AppContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  background-color: #fafafa;\n`;\n_c = AppContainer;\nconst AppBox = styled.div`\n  width: 100%;\n  height: 100%;\n  border: 1px solid #dbdbdb;\n  border-radius: 10px;\n  background-color: #fff;\n  display: flex;\n  flex-direction: row;\n`;\n_c2 = AppBox;\nconst ChatSection = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 2;\n`;\n\n// function a(myId) {\n\n//   axios\n//     .get(\"http://127.0.0.1:8000\", {\n//       params: {\n//         select: 1,\n//         myid: myId,\n//       },\n//     })\n//     .then((response) => {\n//       return response.data;\n//     }).catch(error => {\n//       console.error('Error fetching chats:', error);\n//     });\n// }\n_c3 = ChatSection;\nconst App = () => {\n  _s();\n  // 로그인 하면 myid 받기\n  const currentUserid = 6;\n  // setCurrentUserId(6);\n  const [chats, setChats] = useState([]);\n  const [selectedChatId, setSelectedChatId] = useState(null);\n  useEffect(() => {\n    fetchChats(); // 컴포넌트가 처음 마운트될 때 채팅 목록을 가져오는 함수 호출\n  }, [currentUserid]); // currentUserid가 변경될 때마다 useEffect 호출\n\n  // const [chats, setChats] = useState([\n  //   { id: 1, name: 'John Doe', messages: [], \"createdat\":createdat },\n  //   { id: 2, name: 'Jane Smith', messages: [], \"createdat\":createdat },\n  //   { id: 3, name: 'John', messages: [], \"createdat\":createdat },\n  //   { id: 4, name: 'Minji', messages: [], \"createdat\":createdat },\n  // ]);\n\n  // const addMessage = (message) => {\n  //   setChats(chats.map(chat => {\n  //     if (chat.id === selectedChatId) {\n  //       return { ...chat, messages: [...chat.messages, message] };\n  //     }\n  //     return chat;\n  //   }));\n  // };\n\n  const fetchChats = () => {\n    axios.get('http://127.0.0.1:8000/dm.do', {\n      params: {\n        curId: currentUserid,\n        select: 1\n      }\n    }).then(response => {\n      const sortedChats = response.data.sort((a, b) => new Date(b.createdat) - new Date(a.createdat));\n      setChats(sortedChats);\n    }).catch(error => {\n      console.error('Error fetching chats:', error);\n    });\n  };\n  const sendMessage = message => {\n    // 메시지를 보내는 함수 (예: handleSend 함수 내부와 동일)\n    axios.get(\"http://127.0.0.1:8000\", {\n      params: {\n        select: 2,\n        dm: message.text,\n        me: currentUserid,\n        you: selectedChatId\n      }\n    }).then(response => {\n      // 메시지 전송 후 채팅 목록을 다시 가져옴\n      fetchChats();\n    }).catch(error => {\n      console.error('Error sending message:', error);\n    });\n  };\n  const receiveMessage = () => {\n    const chatSocket = new WebSocket(`ws://${window.location.host}/ws/chat/${selectedChatId}/`);\n    chatSocket.onmessage = function (e) {\n      const data = JSON.parse(e.data);\n      // 받은 메시지 처리 로직 (예시: 채팅 목록을 다시 가져오는 것처럼)\n      const {\n        sender,\n        receiver,\n        message\n      } = data;\n      axios.get(\"http://127.0.0.1:8000\", {\n        params: {\n          select: 3,\n          dm: message.text,\n          me: receiver,\n          you: sender\n        }\n      }).then(response => {\n        // 메시지 전송 후 채팅 목록을 다시 가져옴\n        fetchChats();\n      }).catch(error => {\n        console.error('Error sending message:', error);\n      });\n    };\n    chatSocket.onclose = function (e) {\n      console.error('Chat socket closed unexpectedly');\n    };\n    return () => {\n      chatSocket.close();\n    };\n  };\n  const selectChat = id => {\n    //  'id': partner_id,\n    setSelectedChatId(id);\n  };\n  const selectedChat = chats.find(chat => chat.id === selectedChatId);\n  return /*#__PURE__*/_jsxDEV(AppContainer, {\n    children: /*#__PURE__*/_jsxDEV(AppBox, {\n      children: [/*#__PURE__*/_jsxDEV(ChatList, {\n        chats: chats,\n        selectChat: selectChat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatSection, {\n        children: selectedChat && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(ChatWindow, {\n            messages: selectedChat.messages\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MessageInput, {\n            sendMessage: sendMessage,\n            curUserid: currentUserid,\n            receiv_id: selectedChatId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"4XBatKz2op/I49SyqrZCN6Mg3RU=\");\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"AppContainer\");\n$RefreshReg$(_c2, \"AppBox\");\n$RefreshReg$(_c3, \"ChatSection\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["React","useState","useEffect","styled","ChatWindow","MessageInput","ChatList","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","AppContainer","div","_c","AppBox","_c2","ChatSection","_c3","App","_s","currentUserid","chats","setChats","selectedChatId","setSelectedChatId","fetchChats","get","params","curId","select","then","response","sortedChats","data","sort","a","b","Date","createdat","catch","error","console","sendMessage","message","dm","text","me","you","receiveMessage","chatSocket","WebSocket","window","location","host","onmessage","e","JSON","parse","sender","receiver","onclose","close","selectChat","id","selectedChat","find","chat","children","fileName","_jsxFileName","lineNumber","columnNumber","messages","curUserid","receiv_id","_c4","$RefreshReg$"],"sources":["C:/Mtest/workdjango/instagram/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport ChatWindow from './components//ChatWindow';\nimport MessageInput from './components/MessageInput';\nimport ChatList from './components/ChatList';\nimport axios from \"axios\";\nconst AppContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  background-color: #fafafa;\n`;\n\nconst AppBox = styled.div`\n  width: 100%;\n  height: 100%;\n  border: 1px solid #dbdbdb;\n  border-radius: 10px;\n  background-color: #fff;\n  display: flex;\n  flex-direction: row;\n`;\n\nconst ChatSection = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 2;\n`;\n\n// function a(myId) {\n\n//   axios\n//     .get(\"http://127.0.0.1:8000\", {\n//       params: {\n//         select: 1,\n//         myid: myId,\n//       },\n//     })\n//     .then((response) => {\n//       return response.data;\n//     }).catch(error => {\n//       console.error('Error fetching chats:', error);\n//     });\n// }\nconst App = () => {\n  // 로그인 하면 myid 받기\n  const currentUserid = 6\n  // setCurrentUserId(6);\n  const [chats, setChats] = useState([]);\n  const [selectedChatId, setSelectedChatId] = useState(null);\n  useEffect(() => {\n    fetchChats();  // 컴포넌트가 처음 마운트될 때 채팅 목록을 가져오는 함수 호출\n  }, [currentUserid]);  // currentUserid가 변경될 때마다 useEffect 호출\n\n\n  // const [chats, setChats] = useState([\n  //   { id: 1, name: 'John Doe', messages: [], \"createdat\":createdat },\n  //   { id: 2, name: 'Jane Smith', messages: [], \"createdat\":createdat },\n  //   { id: 3, name: 'John', messages: [], \"createdat\":createdat },\n  //   { id: 4, name: 'Minji', messages: [], \"createdat\":createdat },\n  // ]);\n\n\n\n\n  // const addMessage = (message) => {\n  //   setChats(chats.map(chat => {\n  //     if (chat.id === selectedChatId) {\n  //       return { ...chat, messages: [...chat.messages, message] };\n  //     }\n  //     return chat;\n  //   }));\n  // };\n\n  const fetchChats = () => {\n    axios.get('http://127.0.0.1:8000/dm.do', {\n      params: {\n        curId: currentUserid,\n        select: 1,\n      }\n    }).then(response => {\n      const sortedChats = response.data.sort((a, b) => new Date(b.createdat) - new Date(a.createdat));\n      setChats(sortedChats);\n    }).catch(error => {\n      console.error('Error fetching chats:', error);\n    });\n  };\n\n\n  const sendMessage = (message) => {\n    // 메시지를 보내는 함수 (예: handleSend 함수 내부와 동일)\n    axios.get(\"http://127.0.0.1:8000\", {\n      params: {\n        select: 2,\n        dm: message.text,\n        me: currentUserid,\n        you: selectedChatId,\n      },\n    }).then((response) => {\n      // 메시지 전송 후 채팅 목록을 다시 가져옴\n      fetchChats();\n    }).catch(error => {\n      console.error('Error sending message:', error);\n    });\n  };\n\n  const receiveMessage = () => {\n    const chatSocket = new WebSocket(`ws://${window.location.host}/ws/chat/${selectedChatId}/`);\n\n    chatSocket.onmessage = function (e) {\n      const data = JSON.parse(e.data);\n      // 받은 메시지 처리 로직 (예시: 채팅 목록을 다시 가져오는 것처럼)\n      const { sender, receiver, message } = data;\n      axios.get(\"http://127.0.0.1:8000\", {\n        params: {\n          select: 3,\n          dm: message.text,\n          me: receiver,\n          you: sender,\n        },\n      }).then((response) => {\n        // 메시지 전송 후 채팅 목록을 다시 가져옴\n        fetchChats();\n      }).catch(error => {\n        console.error('Error sending message:', error);\n      });\n    };\n\n    chatSocket.onclose = function (e) {\n      console.error('Chat socket closed unexpectedly');\n    };\n\n    return () => {\n      chatSocket.close();\n    };\n\n  };\n\n  const selectChat = (id) => { //  'id': partner_id,\n    setSelectedChatId(id);\n  };\n\n\n\n  const selectedChat = chats.find(chat => chat.id === selectedChatId);\n\n  return (\n    <AppContainer>\n      <AppBox>\n        <ChatList chats={chats} selectChat={selectChat} />\n        <ChatSection>\n          {selectedChat && (\n            <>\n              <ChatWindow messages={selectedChat.messages} />\n              <MessageInput sendMessage={sendMessage}\n                curUserid={currentUserid}\n                receiv_id={selectedChatId} />\n            </>\n          )}\n        </ChatSection>\n      </AppBox>\n    </AppContainer>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}